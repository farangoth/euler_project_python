#/usr/bin/env python3

from functions import *

def problem1():
    """
    If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
    Find the sum of all the multiples of 3 or 5 below 1000.
    """

    list_multi = []

    for i in range(1,1000):
        if is_multi(i, 5) or is_multi(i,3):
            if i not in list_multi:
                list_multi.append(i)

    solution1 = sum(list_multi)

    print("Sol1: ", solution1)
    return solution1

def problem2():
    """
    Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms."""

    N = 4000000
    solution2 = 0

    list_fibo = fibo(N)
    for i in list_fibo:
        if is_multi(i, 2):
            solution2 += i

    print("Sol2: ", solution2)
    return solution2

def problem3():
    """
    The prime factors of 13195 are 5, 7, 13 and 29.
    What is the largest prime factor of the number 600851475143 ?
    """

    N = 600851475143
    list_factors = factors(N)

    list_prime_factors = [p for p in list_factors if is_prime(p)]

    P = 0
    for p in list_prime_factors:
        if p > P:
            P = p

    print("Sol3: ", P)
    return P

def problem4():
    """
    A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

    Find the largest palindrome made from the product of two 3-digit numbers.
    """
    list_palidroms = []
    for n in range(100,999):
        for m in range(100,999):
            if is_palindrom(n*m):
                list_palidroms.append(n*m)

    solution4 = 0
    for n in list_palidroms:
        if n > solution4:
            solution4 = n

    print("Sol4: ", solution4)
    return solution4

def problem5():
    """2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
    What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
    """
    N = 20

    solution5 = lcm(*range(1,N))

    print("Sol5: ", solution5)
    return solution5

def problem6():
    """Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum."""

    sum1 = 0
    sum2 = 0
    for n in range(0,101):
        sum1 += n
        sum2 += n**2

    solution6 = -sum2 + sum1**2
    print("Sol6: ", solution6)
    return

def problem7():
    """What is the 10 001st prime number?"""

    N = 10001
    primes = list_primes_v2(N)

    print("Sol7: ", primes[-1])
    return primes[-1]

def problem8():
    """Find the thirteen adjacent digits in the 1000-digit number that have the greatest product.
    What is the value of this product?
    """

    digits = 7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450
    str_digits = str(digits)
    len_prod = 13

    prod_max = 1

    for n in range(0, len(str_digits)-len_prod):
        str_slice = str_digits[n:n+len_prod]
        prod = 1
        for digit in str_slice:
            prod *= int(digit)
        if prod > prod_max:
            prod_max = prod

    print("Sol8: ", prod_max)
    return prod_max

if __name__=="__main__":
    # problem1()
    # problem2()
    # problem3()
    # problem4()
    # problem5()
    # problem6()
    # problem7()
    problem8()
